@using AbhsChinese.Code.Common
@using AbhsChinese.Domain.Enum
@{
    ViewBag.PageTitle = "题目管理";
}

<div class="ibox">
    <div class="ibox-content">
        <div class="row">
            <div class="col-12">
                <button type="button" name="btn_questionType"
                        data-question-type="0" class="btn btn-primary">
                    全部
                </button>
                @foreach (var item in CustomEnumHelper.GetElements(typeof(SubjectTypeEnum)))
                {
                    <button type="button" name="btn_questionType"
                            data-question-type="@item.Key" class="btn btn-default">
                        @item.Value
                    </button>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                @Html.Partial("_SearchConditionOfQuestionList")
            </div>
        </div>
        <div class="row">
            <div class="col-12 table_container">
                <div id="table_questions"></div>
                <div class="pagination"></div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    @Styles.Render("~/bundles/css/abhsTableStyles")
    @Styles.Render("~/bundles/css/select2Styles")
}

@section Scripts{
    @Scripts.Render("~/bundles/js/abhsTable")
    @Scripts.Render("~/bundles/js/select2")
    <script src="~/Scripts/PageScripts/abhschinese.common.js"></script>
    <script>
        $(function () {
            initTable();
            registerEvent();

            $('#form_search_question select.abhsselect2').select2({
                width: '197px',
                placeholder: '请选择难度',
                allowClear: true,
                minimumResultsForSearch: Infinity
            });

            reloadByHistory();
        });
        function reloadByHistory() {
            let $form = $('#form_search_question');
            let formData = window.localStorage.getItem('filter');
            if (formData) {
                let $button = null;
                //subjectStatus=&subjectType=0&id=10010&keyword=
                let filterGroups = formData.split('&');
                $.each(filterGroups, function (i, o) {
                    let filters = o.split('=');
                    if (filters[1]) {
                        let name = filters[0];
                        let value = decodeURIComponent(filters[1], true);
                        if (name === 'id' || name === 'keyword') {
                            $form.find(`[name="${name}"]`).val(value);
                        } else if (name === 'subjectType') {
                            $button = $(`[data-question-type="${value}"]`);
                            $form.find('input[name="subjectType"]').val(value);
                            $button.removeClass('btn-default').addClass('btn-primary')
                                    .siblings('.btn-primary').removeClass('btn-primary').addClass('btn-default');
                        } else if (name === 'difficulty') {
                            const difficultyEnum = {
                                1: '一级',
                                2: '二级',
                                3: '三级',
                                4: '四级',
                                5: '五级'
                            }
                            $('select[name="difficulty"]').append(
                                new Option(difficultyEnum[value], value, true, true))
                                .trigger('change');
                        }
                    }
                });
                $form.find('.search').click();
            }

            localStorage.removeItem("filter");
        }
        function registerEvent() {
            $('button[name="btn_questionType"]').on('click', function () {
                let $self = $(this);
                if ($self.hasClass('btn-primary')) {
                    return;
                }

                let type = this.dataset.questionType;
                let $form = $('#form_search_question');
                $form.find('input[name="subjectType"]').val(type);
                $form.find('.search').click();

                $self.removeClass('btn-default').addClass('btn-primary')
                     .siblings('.btn-primary').removeClass('btn-primary').addClass('btn-default');
            });

            $('.ibox-content').on('click', 'a[name="a_redirect"]', function () {
                let formData = $('#form_search_question').serialize();
                window.localStorage.setItem('filter', formData);
            });
        }


        function initTable() {
            let align = 'center';
            let columns = [
                { label: '编号', name: 'Id', align: align },
                { label: '题干', name: 'Name', align: 'left' },
                { label: '年级', name: 'Grade', align: align },
                { label: '类型', name: 'SubjectTypeText', align: align },
                { label: '难度', name: 'Difficulty', align: align },
                { label: '关键字', name: 'Keywords', align: align },
                { label: '关联题', name: 'RelevancyQuestions', align: align },
                {
                    label: '操作', name: '', align: align,
                    formatter: function (index, value, row) {
                        let buttonText = '查看';
                        let url = generateUrl(row.SubjectType, row.Id, row.QuestionState);
                        return '<a name="a_redirect" href="' + url + '">' + buttonText + '</a>';
                    }
                }
            ];
            $('#table_questions').table({
                ajax: {
                    url: '@Url.Action("GetQuestions","Question")'
                },
                columns: columns,
                searchBox: '#form_search_question'
            });

            $('.select2.normal').select2({
                width: '197px',
                allowClear: true,
                minimumResultsForSearch: Infinity
            }).on('change', function (e) {
                $(this).valid();
            });
        }

        function generateUrl(subjectType, subjectId, subjectState) {
            let prefix = 'ViewApproved';
            let controller = '';
            let action = 'Subject';
            switch (subjectType) {
                case SubjectTypeEnum.判断题:
                    controller = 'TrueFalse';
                    break;
                case SubjectTypeEnum.选择题:
                    controller = 'MultipleChoice';
                    break;
                case SubjectTypeEnum.填空题:
                    controller = 'FillInBlank';
                    break;
                case SubjectTypeEnum.选择填空:
                    controller = 'MultipleChoiceFillInBlank';
                    break;
                case SubjectTypeEnum.连线题:
                    controller = 'Match';
                    break;
                case SubjectTypeEnum.主观题:
                    controller = 'Free';
                    break;
                case SubjectTypeEnum.圈点批注标色:
                    controller = 'Mark';
                    break;
                case SubjectTypeEnum.圈点批注断句:
                    controller = 'Mark2';
                    break;
                default:
                    throw new Error('generateUrl方法错误');
            }
            return '/' + controller + '/' + prefix + action + '/' + subjectId + '?subjectType=' + subjectType;
        }
    </script>
}
@using AbhsChinese.Code.Common
@using AbhsChinese.Domain.Enum
@{
    ViewBag.PageTitle = "题目校对";
}

<div class="ibox">
    <div class="ibox-content">
        <div class="row">
            <div class="col-12">
                <button type="button" name="btn_questionType"
                        data-question-type="" class="btn btn-primary">
                    全部
                </button>
                @foreach (var item in CustomEnumHelper.GetElements(typeof(SubjectStatusEnum)))
                {
                    if (item.Key == 3)//合格状态按钮不需要,忽略即可
                    {
                        continue;
                    }
                    <button type="button" name="btn_questionType"
                            data-question-type="@item.Key" class="btn btn-default">
                        @item.Value
                    </button>
                }
            </div>
        </div>
        <div class="row" style="margin-top: -6px;">
            <div class="col-10">
                @Html.Partial("_SearchConditionOfQuestionList")
            </div>
            <div class="col-2 text-right align-self-end">
                <div class="btn-group">
                    <button data-toggle="dropdown" class="btn btn-default dropdown-toggle">题目录入</button>
                    <ul class="dropdown-menu">
                        <li>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditMultipleChoiceSubject",
                                    "MultipleChoice")">选择题</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditTrueFalseSubject",
                                    "TrueFalse")">判断题</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditFillInBlankSubject",
                                    "FillInBlank")">填空题</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditMultipleChoiceFillInBlankSubject",
                                    "MultipleChoiceFillInBlank")">选择填空</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditMatchSubject",
                                    "Match")">连线题</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditFreeSubject",
                                    "Free")">主观题</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditMarkSubject",
                                    "Mark")">圈点批注-标色</a>
                            <a class="dropdown-item"
                               href="@Url.Action(
                                    "EditMarkSubject",
                                    "Mark2")">圈点批注-断句</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 table_container">
                <div id="table_questions"></div>
                <div class="pagination"></div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    @Styles.Render("~/bundles/css/abhsTableStyles")
    <style>
        .short-text {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            width: 450px;
            display: inline-block;
        }
    </style>
}

@section Scripts{
    @Scripts.Render("~/bundles/js/abhsTable")
    <script src="~/Scripts/PageScripts/abhschinese.common.js"></script>
    <script>

        $(function () {
            initTable();
            registerEvent();
            $('.select2.normal').select2({
                width: '197px',
                allowClear: true,
                minimumResultsForSearch: Infinity
            }).on('change', function (e) {
                $(this).valid();
            });

            reloadByHistory();
        });

        function reloadByHistory() {
            let $form = $('#form_search_question');
            let formData = window.localStorage.getItem('filter');
            if (formData) {
                let $button = null;
                //subjectStatus=&subjectType=0&id=10010&keyword=
                let filterGroups = formData.split('&');
                $.each(filterGroups, function (i, o) {
                    let filters = o.split('=');
                    if (filters.length === 2) {
                        let name = filters[0];
                        let value = decodeURIComponent(filters[1], true);
                        if (name === 'id' || name === 'keyword') {
                            $form.find(`[name="${name}"]`).val(value);
                        } else if (name === 'subjectStatus') {
                            $button = $(`[data-question-type="${value}"]`);
                            $form.find('input[name="subjectStatus"]').val(value);
                            $button.removeClass('btn-default').addClass('btn-primary')
                                    .siblings('.btn-primary').removeClass('btn-primary').addClass('btn-default');
                        } else if (name === 'difficulty') {
                            const difficultyEnum = {
                                1: '一级',
                                2: '二级',
                                3: '三级',
                                4: '四级',
                                5: '五级'
                            }
                            $('select[name="difficulty"]').append(
                                new Option(difficultyEnum[value], value, true, true))
                                .trigger('change');
                        }
                    }
                });
                $form.find('.search').click();
            }

            localStorage.removeItem("filter");
        }

        function registerEvent() {
            $('button[name="btn_questionType"]').on('click', function () {
                let $self = $(this);
                if ($self.hasClass('btn-primary')) {
                    return;
                }

                let type = this.dataset.questionType;
                let $form = $('#form_search_question');
                $form.find('input[name="subjectStatus"]').val(type);
                $form.find('.search').click();

                $self.removeClass('btn-default').addClass('btn-primary')
                     .siblings('.btn-primary').removeClass('btn-primary').addClass('btn-default');
            });

            $('.dropdown-menu a').on('click', function () {
                let formData = $('#form_search_question').serialize();
                window.localStorage.setItem('filter', formData);
            });
        }
        function initTable() {
            let align = 'center';
            let color = {
                编辑中: 'text-warning',
                不合格: 'text-danger',
                待校对: ''
            };
            let columns = [
                { label: '编号', name: 'Id', align: align, width: 80 },
                {
                    label: '题干', name: 'Name', align: 'left', width: 350,
                    formatter: function (index, value, row) {
                        if (value) {
                            return `<div class="short-text">${value}</div>`;
                        } else {
                            return '';
                        }
                    }
                },
                { label: '年级', name: 'Grade', align: align },
                { label: '类型', name: 'SubjectTypeText', align: align },
                { label: '难度', name: 'Difficulty', align: align },
                { label: '关键字', name: 'Keywords', align: align },
                {
                    label: '状态', name: 'QuestionStateText', align: align,
                    formatter: function (index, value, row) {
                        let state = row.QuestionStateText;
                        return `<span class="${color[state]}">${state}</span>`;
                    }
                },
                {
                    label: '操作', name: '', align: align,
                    formatter: function (index, value, row) {
                        let buttonText = '查看';
                        let params = '?' + 'subjectType=' + row.SubjectType;
                        if (row.QuestionState === SubjectStatusEnum.编辑中) {
                            buttonText = '编辑';
                        }
                        let url = generateUrl(row.SubjectType, row.Id, row.QuestionState);
                        return '<a href="' + url + '">' + buttonText + '</a>';
                    }
                }
            ];
            $('#table_questions').table({
                ajax: {
                    url: '@Url.Action("GetMyQuestions","Question")'
                },
                columns: columns,
                searchBox: '#form_search_question'
            });
        }

        function generateUrl(subjectType, subjectId, subjectState) {
            let prefix = 'Edit';
            if (subjectState === SubjectStatusEnum.待校对
                || subjectState === SubjectStatusEnum.不合格) {
                prefix = 'View';
            }
            let controller = '';
            let action = '';
            switch (subjectType) {
                case SubjectTypeEnum.判断题:
                    controller = 'TrueFalse';
                    action = 'TrueFalseSubject';
                    break;
                case SubjectTypeEnum.选择题:
                    controller = 'MultipleChoice';
                    action = 'MultipleChoiceSubject';
                    break;
                case SubjectTypeEnum.填空题:
                    controller = 'FillInBlank';
                    action = 'FillInBlankSubject';
                    break;
                case SubjectTypeEnum.选择填空:
                    controller = 'MultipleChoiceFillInBlank';
                    action = 'MultipleChoiceFillInBlankSubject';
                    break;
                case SubjectTypeEnum.连线题:
                    controller = 'Match';
                    action = 'MatchSubject';
                    break;
                case SubjectTypeEnum.主观题:
                    controller = 'Free';
                    action = 'FreeSubject';
                    break;
                case SubjectTypeEnum.圈点批注标色:
                    controller = 'Mark';
                    action = 'MarkSubject';
                    break;
                case SubjectTypeEnum.圈点批注断句:
                    controller = 'Mark2';
                    action = 'MarkSubject';
                    break;
                default:
                    throw new Error('generateUrl方法错误');
            }
            return '/' + controller + '/' + prefix + action + '/' + subjectId;
        }
    </script>
}